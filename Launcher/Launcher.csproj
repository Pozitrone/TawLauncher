<Project InitialTargets="ValidateContentFiles" Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">

    <PropertyGroup>
        <!-- Build settings -->
        <OutputType>WinExe</OutputType>
        <TargetFramework>net472</TargetFramework>
        <TargetPlatformIdentifier>Windows</TargetPlatformIdentifier>
        <UseWPF>true</UseWPF>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <OutputPath>builds/$(Configuration)/</OutputPath>
        <!-- Single File Publish -->
        <PublishSingleFile>true</PublishSingleFile>
        <SelfContained>true</SelfContained>
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
        <PublishReadyToRun>true</PublishReadyToRun>
        <!-- Addotional settings -->
        <RootNamespace>TawLauncher</RootNamespace>
        <AssemblyName>TawLauncher</AssemblyName>
        <ApplicationIcon>Resources/small.ico</ApplicationIcon>

        <!-- Custom data -->
        <LoadingLogo>Resources/large.png</LoadingLogo>

        <SkipConfigFile>false</SkipConfigFile>
        <VersionFileUrl>null</VersionFileUrl>
        <ApplicationZipUrl>null</ApplicationZipUrl>
        <AutomaticallyUpdate>false</AutomaticallyUpdate>
        <ExeToRun>null</ExeToRun>
        <RunAfterUpdateFinished>false</RunAfterUpdateFinished>
        <KeepZipFile>false</KeepZipFile>
        <KeepLauncherOpen>false</KeepLauncherOpen>
        <LangVersion>9</LangVersion>
        <!-- End custom data -->
    </PropertyGroup>

    <!--<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == '[ConfigurationName]|AnyCPU' ">
        <AssemblyName>My Launcher</AssemblyName>
        <ApplicationIcon>Resources/MyContent/small.ico</ApplicationIcon>
        <LoadingLogo>Resources/MyContent/large.png</LoadingLogo>
        <SkipConfigFile>false</SkipConfigFile>
        <VersionFileUrl>null</VersionFileUrl>
        <ApplicationZipUrl>null</ApplicationZipUrl>
        <AutomaticallyUpdate>false</AutomaticallyUpdate>
        <ExeToRun>null</ExeToRun>
        <RunAfterUpdateFinished>false</RunAfterUpdateFinished>
        <KeepZipFile>false</KeepZipFile>
        <KeepLauncherOpen>false</KeepLauncherOpen>
    </PropertyGroup>-->

    <ItemGroup>
        <Resource Include="Resources\**\*.*" />
        <PackageReference Include="RoslynCodeTaskFactory" Version="2.0.7" PrivateAssets="All" />
        <Compile Include="$(ProjectDir)Config.generated.cs" Condition="!Exists('$(ProjectDir)Config.generated.cs')" />
    </ItemGroup>

    <UsingTask TaskName="GenerateFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(RoslynCodeTaskFactory)" Condition=" '$(RoslynCodeTaskFactory)' != ''">
        <ParameterGroup>
            <Filename ParameterType="System.String" Required="true" />
        </ParameterGroup>

        <Task>
            <Reference Include="System.Core" />
            <Using Namespace="System" />
            <Using Namespace="System.IO" />

            <Code Type="Fragment" Language="C#">
                <![CDATA[
            String context = "";
            
            if( File.Exists(Filename) )
            {
                context = File.ReadAllText(Filename);
            }
            var sb = new StringBuilder();
            sb.AppendLine("// Autogenerated by .csproj file. Do not edit, your modifications will be lost after generating file again");
            sb.AppendLine();
            sb.AppendLine("namespace TAWLauncher {");
            sb.AppendLine("    public static partial class Config {");
            sb.AppendLine($"        public static readonly string LoadingLogo = \"$(LoadingLogo)\";");
            sb.AppendLine($"        public static readonly bool SkipConfigFile = $(SkipConfigFile);");
            sb.AppendLine($"        public static readonly string VersionFileUrl = \"$(VersionFileUrl)\";");
            sb.AppendLine($"        public static readonly string ApplicationZipUrl = \"$(ApplicationZipUrl)\";");
            sb.AppendLine($"        public static readonly bool AutomaticallyUpdate = $(AutomaticallyUpdate);");
            sb.AppendLine($"        public static readonly string ExeToRun = \"$(ExeToRun)\";");
            sb.AppendLine($"        public static readonly bool RunAfterUpdateFinished = $(RunAfterUpdateFinished);");
            sb.AppendLine($"        public static readonly bool KeepZipFile = $(KeepZipFile);");
            sb.AppendLine($"        public static readonly bool KeepLauncherOpen = $(KeepLauncherOpen);");
            sb.AppendLine("    }");
            sb.AppendLine("}");
            
            if(sb.ToString() != context)
            {
                //Log.LogMessage(MessageImportance.High, $"Saving file '{Filename}'");
                File.WriteAllText(Filename, sb.ToString());
            }
          ]]>
            </Code>
        </Task>
    </UsingTask>

    <Target Name="ValidateContentFiles">
        <GenerateFile Filename="$(ProjectDir)Config.generated.cs" Condition=" '$(RoslynCodeTaskFactory)' != ''" />
    </Target>

</Project>
